% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event.R
\name{Event}
\alias{Event}
\title{Event Class}
\description{
Describes a general event in the simulation.
}
\section{Super class}{
\code{\link[individual:EventBase]{individual::EventBase}} -> \code{Event}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-Event-new}{\code{Event$new()}}
\item \href{#method-Event-schedule}{\code{Event$schedule()}}
\item \href{#method-Event-clear_schedule}{\code{Event$clear_schedule()}}
\item \href{#method-Event-.process_listener}{\code{Event$.process_listener()}}
\item \href{#method-Event-.process_listener_cpp}{\code{Event$.process_listener_cpp()}}
\item \href{#method-Event-.resize}{\code{Event$.resize()}}
\item \href{#method-Event-save_state}{\code{Event$save_state()}}
\item \href{#method-Event-restore_state}{\code{Event$restore_state()}}
\item \href{#method-Event-clone}{\code{Event$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="individual" data-topic="EventBase" data-id=".process"><a href='../../individual/html/EventBase.html#method-EventBase-.process'><code>individual::EventBase$.process()</code></a></span></li>
<li><span class="pkg-link" data-pkg="individual" data-topic="EventBase" data-id=".tick"><a href='../../individual/html/EventBase.html#method-EventBase-.tick'><code>individual::EventBase$.tick()</code></a></span></li>
<li><span class="pkg-link" data-pkg="individual" data-topic="EventBase" data-id=".timestep"><a href='../../individual/html/EventBase.html#method-EventBase-.timestep'><code>individual::EventBase$.timestep()</code></a></span></li>
<li><span class="pkg-link" data-pkg="individual" data-topic="EventBase" data-id="add_listener"><a href='../../individual/html/EventBase.html#method-EventBase-add_listener'><code>individual::EventBase$add_listener()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-new"></a>}}
\if{latex}{\out{\hypertarget{method-Event-new}{}}}
\subsection{Method \code{new()}}{
Initialise an Event.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$new(restore = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{restore}}{if true, the schedule of this event is restored when
restoring from a saved simulation.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-schedule"></a>}}
\if{latex}{\out{\hypertarget{method-Event-schedule}{}}}
\subsection{Method \code{schedule()}}{
Schedule this event to occur in the future.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$schedule(delay)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{delay}}{the number of time steps to wait before triggering the event,
can be a scalar or a vector of values for events that should be triggered
multiple times.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-clear_schedule"></a>}}
\if{latex}{\out{\hypertarget{method-Event-clear_schedule}{}}}
\subsection{Method \code{clear_schedule()}}{
Stop a future event from triggering.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$clear_schedule()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-.process_listener"></a>}}
\if{latex}{\out{\hypertarget{method-Event-.process_listener}{}}}
\subsection{Method \code{.process_listener()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$.process_listener(listener)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-.process_listener_cpp"></a>}}
\if{latex}{\out{\hypertarget{method-Event-.process_listener_cpp}{}}}
\subsection{Method \code{.process_listener_cpp()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$.process_listener_cpp(listener)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-.resize"></a>}}
\if{latex}{\out{\hypertarget{method-Event-.resize}{}}}
\subsection{Method \code{.resize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$.resize()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-save_state"></a>}}
\if{latex}{\out{\hypertarget{method-Event-save_state}{}}}
\subsection{Method \code{save_state()}}{
save the state of the event
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$save_state()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-restore_state"></a>}}
\if{latex}{\out{\hypertarget{method-Event-restore_state}{}}}
\subsection{Method \code{restore_state()}}{
restore the event from a previously saved state.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$restore_state(timestep, state)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{timestep}}{the timestep at which simulation is resumed.}

\item{\code{state}}{the previously saved state, as returned by the
\code{save_state} method. NULL is passed when restoring from a saved
simulation in which this variable did not exist.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-Event-clone"></a>}}
\if{latex}{\out{\hypertarget{method-Event-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Event$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
